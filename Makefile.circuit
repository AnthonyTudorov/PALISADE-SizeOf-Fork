#
#Copyright (c) 2015, New Jersey Institute of Technology (NJIT)
#All rights reserved.
#Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
#met:
#1. Redistributions of source code must retain the above copyright
#notice, this list of conditions and the following disclaimer.
#2. Redistributions in binary form must reproduce the above copyright
#notice, this list of conditions and the following disclaimer in the
#documentation and/or other materials provided with the distribution.
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#POSSIBILITY OF SUCH DAMAGE.
#


################
# Makefile.circuit builds the circuit components of the PALISADE library
# Includes unit tests and demos
################

CIRCUITSRCDIR := src/circuit
CIRCUITBINDIR := src/circuit/bin
CIRCUITTESTDIR := src/circuit/unittest
CIRCUITDEMODIR := src/circuit/demo

CIRCUITSOURCES := $(sort $(wildcard $(CIRCUITSRCDIR)/lib/*.cpp) $(CIRCUITSRCDIR)/lib/parse.cpp $(CIRCUITSRCDIR)/lib/scan.cpp)
CIRCUITUNITSOURCES := $(wildcard $(CIRCUITSRCDIR)/unittest/*.cpp)
CIRCUITDEMOSOURCES := $(wildcard $(CIRCUITDEMODIR)/*.cpp)

CIRCUITOBJECTS = $(patsubst $(CIRCUITSRCDIR)/%,$(CIRCUITBINDIR)/%,$(patsubst %.cpp,%.o,$(CIRCUITSOURCES)))
CIRCUITUNITOBJECTS := $(patsubst $(CIRCUITSRCDIR)/%,$(CIRCUITBINDIR)/%,$(patsubst %.cpp,%.o,$(CIRCUITUNITSOURCES)))
CIRCUITUNITOBJECTS += test/include/gtest/gtest-all.o
CIRCUITDEMOOBJECTS := $(patsubst $(CIRCUITSRCDIR)/%,$(CIRCUITBINDIR)/%,$(patsubst %.cpp,%.o,$(CIRCUITDEMOSOURCES)))

CLIBS := $(EXTLIBDIR)/$(PALISADETRAPDOORLIB) $(EXTLIBDIR)/$(PALISADEPKELIB) $(EXTLIBDIR)/$(PALISADECORELIB)

CIRCUIT_TEST_TARGET := $(EXTTESTDIR)/circuit/tests$(EXESUFFIX)

-include $(CIRCUITOBJECTS:.o=.d)
-include $(CIRCUITUNITOBJECTS:.o=.d)
-include $(CIRCUITDEMOOBJECTS:.o=.d)

circuitstring:
	@echo $(INC)

.PHONY:allcircuit
allcircuit: $(CLIBS) gram $(EXTLIBDIR)/$(PALISADECIRCUITLIB) $(CIRCUIT_TEST_TARGET) $(CIRCUITDEMOSOURCES) allcircuitdemos

gram: $(CIRCUITSRCDIR)/lib/parse.cpp $(CIRCUITSRCDIR)/lib/parse.hpp $(CIRCUITSRCDIR)/lib/scan.cpp

$(CIRCUITSRCDIR)/lib/parse.hpp: $(CIRCUITSRCDIR)/lib/parse.cpp

$(CIRCUITSRCDIR)/lib/parse.cpp: $(CIRCUITSRCDIR)/lib/parse.y
	bison --defines -o $@ $^

$(CIRCUITSRCDIR)/lib/scan.cpp: $(CIRCUITSRCDIR)/lib/scan.l
	flex -o $@ $^

allcircuitdemos: $(patsubst $(CIRCUITBINDIR)/demo/%,bin/demo/circuit/%,$(patsubst %.o,%$(EXESUFFIX),$(CIRCUITDEMOOBJECTS)))

bin/demo/circuit/%$(EXESUFFIX): src/circuit/bin/demo/%.o $(EXTLIBDIR)/$(PALISADECIRCUITLIB)
	@mkdir -p $(@D)
	$(CC) -o $@ $^ $(EXTLIB) -lPALISADEcore -lPALISADEpke -lPALISADEtrapdoor -lPALISADEcircuit

#this builds the palisade library out of the objects 
$(EXTLIBDIR)/$(PALISADECIRCUITLIB): $(CIRCUITOBJECTS) $(CLIBS)
	@echo " -- circuit:linking $@ from CIRCUITOBJECTS"
	mkdir -p $(EXTLIBDIR)
	$(CC) $(LIBCMD) -o $@ $(CIRCUITOBJECTS) -L$(EXTLIBDIR) -lPALISADEcore -lPALISADEpke -lPALISADEtrapdoor -lgomp 

### #this builds the individual objects that make up the library .
.PRECIOUS: $(CIRCUITBINDIR)/%
$(CIRCUITBINDIR)/%:
	@if [ "$(suffix $@)" = ".o" ] ;   \
	then  \
		mkdir -p $(@D)  ;\
		echo $(CC) $(CPPFLAGS) $(INC) -c -o $@ $(patsubst $(CIRCUITBINDIR)/%,$(CIRCUITSRCDIR)/%,$(patsubst %.o,%.cpp,$@))  ;\
		$(CC) -MM $(CPPFLAGS) $(INC) $(patsubst $(CIRCUITBINDIR)/%,$(CIRCUITSRCDIR)/%,$(patsubst %.o,%.cpp,$@)) > $(patsubst %.o,%.d,$@) ;\
		mv -f $(patsubst %.o,%.d,$@) $(patsubst %.o,%.d.tmp,$@)  ;\
		sed -e 's|.*\.o:|$(CIRCUITBINDIR)/$*:|' < $(patsubst %.o,%.d.tmp,$@) > $(patsubst %.o,%.d,$@)  ;\
		rm -f $(patsubst %.o,%.d.tmp,$@)  ; \
		$(CC) $(CPPFLAGS) -Wno-sign-compare $(INC) -c -o $@ $(patsubst $(CIRCUITBINDIR)/%,$(CIRCUITSRCDIR)/%,$(patsubst %.o,%.cpp,$@))  ;\
	fi

.PHONY: cleancircuit 

#this target is used to cleanup, it is called from the top Makefile
cleancircuit: 
	$(RM) -fr $(CIRCUITBINDIR) $(EXTLIBDIR)/$(PALISADECIRCUITLIB) `dirname $(CIRCUIT_TEST_TARGET)` bin/demo/circuit $(CIRCUITSRCDIR)/lib/parse.cpp $(CIRCUITSRCDIR)/lib/scan.cpp $(CIRCUITSRCDIR)/lib/parse.hpp $(wildcard $(CIRCUITSRCDIR)/lib/*.hh)

# this links test executable  from objects in the test build directory
$(CIRCUIT_TEST_TARGET): $(CIRCUITUNITOBJECTS) $(CLIBS)
	@mkdir -p `dirname $(CIRCUIT_TEST_TARGET)`
	$(CC) $(CIRCUITUNITOBJECTS) -o $(CIRCUIT_TEST_TARGET) $(CLIBS) $(TEST_LIB)

#used to run tests from make
.PHONY: testcircuit
testcircuit: $(CIRCUIT_TEST_TARGET)
	$(CIRCUIT_TEST_TARGET)

