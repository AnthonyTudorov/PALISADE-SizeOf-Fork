stages:
- setup
- build
- test
- unit
- memory
- deploy
- cleanup

code_quality:
  stage: test
  before_script:
  - shopt -s globstar
  script:
  - cpplint src/**
  allow_failure: true
  tags:
  - audit
  dependencies: []

shell_lint:
  stage: test
  script:
  - shellcheck configure.sh
  - shellcheck test/benchmark_all_backends.sh
  - shellcheck test/build_all_backends.sh
  - shellcheck test/build_cov_test_backends.sh
  - shellcheck test/test_all_backends.sh
  - shellcheck test/test_cov_backends.sh
  - shellcheck test/valgrind_all_backends.sh
  allow_failure: true
  tags:
  - audit
  dependencies: []

sast:
  stage: test
  script:
  - flawfinder src/
  allow_failure: true
  tags:
  - audit
  dependencies: []

check:
  stage: test
  script:
  - cppcheck -j $(nproc) src/
  allow_failure: true
  tags:
  - audit
  dependencies: []

config:
  stage: setup
  script:
  - ./configure.sh
  tags:
  - linux
  dependencies: []

build_ext:
  stage: setup
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) gmp_all
  - make -j $(nproc) ntl_all
  artifacts:
    paths:
    - third-party
    expire_in: 2 hrs
  tags:
  - linux
  dependencies: []

build:
  stage: build
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) all
  artifacts:
    paths:
    - bin
    expire_in: 1 day
  tags:
  - linux
  dependencies:
  - build_ext

build_benchmark:
  stage: build
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) benchmark
  dependencies:
  - build_ext
  tags:
  - linux
  artifacts:
    paths:
      - bin
    expire_in: 1 day

unit_test:
  stage: unit
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) testall
  tags:
  - linux
  dependencies:
  - build_ext
  - build

cyclo:
  stage: test
  script:
  - lizard -t $(nproc) src/
  tags:
  - audit
  allow_failure: true
  dependencies: []

coverage:
  stage: test
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) all COVERAGE=1
  - make -j $(nproc) testall COVERAGE=1
  - mkdir -p doc/coverage
  - gcovr -j $(nproc) --verbose -r . --filter src/[^/]+/lib/* --filter src/* --html --html-details -o doc/coverage/index.html --print-summary
  allow_failure: true
  tags: 
  - audit
  dependencies:
  - build_ext
  artifacts:
    paths:
    - doc/coverage
    expire_in: 3 hours

pages:
  stage: deploy
  script:
  - make -j $(nproc) docs
  - mkdir public
  - mv doc/apidocs/html public
  - mv doc/coverage public
  artifacts:
    paths:
    - public
    expire_in: 1 day
  only:
  - master
  tags:
  - doxygen
  allow_failure: true
  dependencies:
  - coverage

clean:
  stage: cleanup
  script:
  - make -j $(nproc) clobber
  tags:
  - linux
  when: always
  dependencies: []

memleak:
  stage: memory
  before_script:
  - module load gcc/7.3.0
  - g++ --version
  script:
  - make -j $(nproc) all MEM=1
  - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$(pwd)/third-party/lib:$(pwd)/bin/lib valgrind --leak-check=yes ./bin/unittest/tests
  only:
  - schedules
  tags:
  - linux
  dependencies: []
