#
#Copyright (c) 2015, New Jersey Institute of Technology (NJIT)
#All rights reserved.
#Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
#met:
#1. Redistributions of source code must retain the above copyright
#notice, this list of conditions and the following disclaimer.
#2. Redistributions in binary form must reproduce the above copyright
#notice, this list of conditions and the following disclaimer in the
#documentation and/or other materials provided with the distribution.
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#POSSIBILITY OF SUCH DAMAGE.
#

BM_SRCDIR = google/benchmark-master/src
BM_IFLAGS = -I$(BM_SRCDIR)../include
BM_SRC = $(wildcard $(BM_SRCDIR)/*.cc)
BM_OBJ = $(BM_SRC:.cc=.o)

#this defines the benchmark library archive
BM_LIB = $(BM_SRCDIR)/libbenchmark.a

# this builds objects from sources for benchmark library
$(BM_SRCDIR)/%.o: $(BM_SRCDIR)/%.cc
	$(CC) $(CPPFLAGS) $(BM_IFLAGS) -o $@ -c $<

$(BM_LIB) : $(BM_OBJ)

libbenchmark: $(BM_LIB)

#this is the actual target that gets called when make is executed (part of all in Makefile)
#it makes the library, benchmark examples and the actual palisade  benchmarks
allbenchmarktargets: make_benchmark_lib make_benchmarks make_benchmark_examples 

# this is where the benchmark library code lives
BENCHMARK_LIBSRCDIR = benchmark/include/libsrc

#these are the includes for compiling the objects that comprise the library (only)
BENCHMARK_LIB_INCLUDES := -Ibenchmark/include -Ibenchmark/include/libsrc -Iinclude $(INC)

#define list of source files for the library (all files with .cc in the LIBSRCDIR
BENCHMARK_LIBSRC =  $(wildcard $(BENCHMARK_LIBSRCDIR)/*.cc)
BENCHMARK_LIBOBJ = $(BENCHMARK_LIBSRC:.cc=.o)

#note the following may need to be set automatically ala cmake
LIBBENCHMARK_FLAGS = -DHAVE_STEADY_CLOCK  -std=c++11 -Wall -Wextra -Wshadow -pedantic -pedantic-errors -Wfloat-equal -Wzero-as-null-pointer-constant -fstrict-aliasing -Wstrict-aliasing -Wno-nested-anon-types -O3 -DNDEBUG -Werror 

#this defines the benchmark library archive
BENCHMARK_LIB = $(BENCHMARK_LIBSRCDIR)/libbenchmark.a

# this builds objects from sources for benchmark library
$(BENCHMARK_LIBSRCDIR)/%.o: $(BENCHMARK_LIBSRCDIR)/%.cc
	@echo " -- benchmark:compiling benchmark library source $@"	
	$(CC) $(CPPFLAGS) $(LIBBENCHMARK_FLAGS)  $(BENCHMARK_LIB_INCLUDES) -o $@ -c $<

.PHONY:make_benchmark_lib
make_benchmark_lib: $(BENCHMARK_LIB)

$(BENCHMARK_LIB): $(BENCHMARK_LIBOBJ)
	@echo " -- benchmark:linking benchmark library $<"	
	ar cr $(BENCHMARK_LIB) $(BENCHMARK_LIBOBJ)
	ranlib $(BENCHMARK_LIB) 
	@echo

########## EXAMPLES BUILD HERE
# note EXAMPLES build in the same directory as their source.
# thus only one diretory is needed
# examples also do not use the palisade library, so they have their own build lines
# for objects and executables

# the one directory everything will live in
BENCHMARK_EXAMPLES_SRC_DIR = benchmark/examples
BENCHMARK_EXAMPLES_BIN_DIR = benchmark/examples/bin
BENCHMARK_EXAMPLES_BUILD_DIR = benchmark/examples/build

#define list of source files (all files with .cc in the BENCHMARK_EXAMPLES_SRC_DIR
BENCHMARK_EXAMPLES_SRC =  $(wildcard $(BENCHMARK_EXAMPLES_SRC_DIR)/*.cc) 

#define list of objects (1:1 substituion of .cc -->.o for all .cc files)
BENCHMARK_EXAMPLES_OBJ = $(BENCHMARK_EXAMPLES_SRC:$(BENCHMARK_EXAMPLES_SRC_DIR)%.cc=$(BENCHMARK_EXAMPLES_BUILD_DIR)%.o)

#define list of executables (1:1 substituion of .cc --> no extention in all .cc files)
BENCHMARK_EXAMPLES = $(BENCHMARK_EXAMPLES_SRC:$(BENCHMARK_EXAMPLES_SRC_DIR)%.cc=$(BENCHMARK_EXAMPLES_BIN_DIR)%)

# this is the include line for generating any benc2hmark object (not in the library)
BENCHMARK_INCLUDES = -Ibenchmark/include -Iinclude $(BOOSTINCLUDE) $(INC)

# this builds objects from sources for examples
$(BENCHMARK_EXAMPLES_BUILD_DIR)/%.o: $(BENCHMARK_EXAMPLES_SRC_DIR)/%.cc
	@echo " -- benchmark:compiling example $@"	
	@mkdir -p $(BENCHMARK_EXAMPLES_SRC_DIR)/build/
	$(CC) $(CPPFLAGS) $(LIBBENCHMARK_FLAGS)  $(BENCHMARK_INCLUDES) -c $< -o $@

# this builds executables from objects for examples
$(BENCHMARK_EXAMPLES_BIN_DIR)/%$(EXESUFFIX): $(BENCHMARK_EXAMPLES_BUILD_DIR)/%.o
	@echo " -- benchmark:linking example $@"	
	@mkdir -p $(BENCHMARK_EXAMPLES_SRC_DIR)/bin/
	$(CC) $(CPPFLAGS) $(LIBBENCHMARK_FLAGS)  $<  -o $@ $(RDYNAMIC) $(BENCHMARK_LIB) $(LIB) -lpthread $(MINGWREGEX) 

#this updates the binaries when the objects or libraries are touched
$(BENCHMARK_EXAMPLES): $(BENCHMARK_EXAMPLES_OBJ)  $(BENCHMARK_LIB)

########### PALISADE BENCHMARKS BUILD HERE

# this defines the source, build (obj) and binary directories
BENCHMARK_SRC_DIR = benchmark/src
BENCHMARK_BIN_DIR = benchmark/bin
BENCHMARK_BUILD_DIR = benchmark/build

#define list of source files (all files with .cc in the BENCHMARK_SRC_DIR
BENCHMARK_SRC =  $(wildcard $(BENCHMARK_SRC_DIR)/*.cpp) 

#define list of objects (1:1 substituion of .cc -->.o for all .cc files in _SRC_DIR)
#and puts objects in _BUILD_DIR
BENCHMARK_OBJ =  $(BENCHMARK_SRC:$(BENCHMARK_SRC_DIR)%.cpp=$(BENCHMARK_BUILD_DIR)%.o)

-include $(BENCHMARK_OBJ:.o=.d)

#define list of executables (1:1 substituion of .cc --> no extention in all .cc files)
#and puts executables in _BIN_DIR
BENCHMARK_BIN =  $(BENCHMARK_SRC:$(BENCHMARK_SRC_DIR)%.cpp=$(BENCHMARK_BIN_DIR)%)


#this is is the Include directive for the palisade code being benchmarked
BENCHMARK_INC = -Isrc $(INC)

# this builds objects from sources for benchmarks
$(BENCHMARK_BUILD_DIR)/%.o: $(BENCHMARK_SRC_DIR)/%.cpp
	@mkdir -p $(BENCHMARK_BUILD_DIR)
	$(CC) $(CPPFLAGS) $(BENCHMARK_INC) $(LIBBENCHMARK_FLAGS)  $(BENCHMARK_INCLUDES) -c $< -o $@
	$(CC) -MM $(CPPFLAGS) $(BENCHMARK_INC) $(LIBBENCHMARK_FLAGS)  $(BENCHMARK_INCLUDES) $< > $(patsubst %.o,%.d,$@)
	@mv -f $(patsubst %.o,%.d,$@) $(patsubst %.o,%.d.tmp,$@)
	@sed -e 's|.*\.o:|$@:|' < $(patsubst %.o,%.d.tmp,$@) > $(patsubst %.o,%.d,$@)
	@rm -f $(patsubst %.o,%.d.tmp,$@)

#this updates the binaries when the objects or libraries are touched
$(BENCHMARK_BIN): $(BENCHMARK_OBJ) $(BENCHMARK_LIB)

# this builds executables from objects for benchmarks
$(BENCHMARK_BIN_DIR)/%$(EXESUFFIX): $(BENCHMARK_BUILD_DIR)/%.o 
	@echo " -- benchmark:linking $@"
	@mkdir -p $(BENCHMARK_BIN_DIR)
	$(CC) $(CPPFLAGS) $(BENCHMARK_INC) $(LIBBENCHMARK_FLAGS)  $< -o $@ -L$(EXTLIBDIR) -lPALISADEpke -lPALISADEcore $(RDYNAMIC) $(BENCHMARK_LIB) $(EXTLIB)  $(MINGWREGEX)
	@echo

# this is the target that makes benchmark examples
.PHONY:make_benchmark_examples
make_benchmark_examples: $(BENCHMARK_EXAMPLES)

# this is the target that makes the actual benchmarks 
.PHONY:make_benchmarks
make_benchmarks: $(BENCHMARK_BIN)

# this target lets us see what all the strings are define as, as an aid to debugging the
# Makefile.benchmark 
# just run make docbenchmarkstrings
.PHONY:docbenchmarkstrings
docbenchmarkstrings:
	@echo 'the following make strings are defined in Makefile.benchmark'
	@echo 'BENCHMARK_LIB $(BENCHMARK_LIB)' 
	@echo 'BENCHMARK_LIBOBJ  $(BENCHMARK_LIBOBJ)' 
	@echo 'BENCHMARK_LIBSRCDIR $(BENCHMARK_LIBSRCDIR)'
	@echo 'BENCHMARK_LIBSRC $(BENCHMARK_LIBSRC)'
	@echo
	@echo 'BENCHMARK_EXAMPLES $(BENCHMARK_EXAMPLES)' 
	@echo 'BENCHMARK_EXAMPLES_OBJ $(BENCHMARK_EXAMPLES_OBJ)' 
	@echo
	@echo 'BENCHMARK_SRC_DIR $(BENCHMARK_SRC_DIR)' 
	@echo 'BENCHMARK_BIN_DIR $(BENCHMARK_BIN_DIR)'
	@echo 'BENCHMARK_BUILD_DIR $(BENCHMARK_BUILD_DIR)'
	@echo 'BENCHMARK_SRC $(BENCHMARK_SRC)'
	@echo 'BENCHMARK_OBJ $(BENCHMARK_OBJ)'
	@echo 'BENCHMARK_BIN $(BENCHMARK_BIN)'
	@echo 'BENCHMARK_INC $(BENCHMARK_INC)'
	@echo 'INC $(INC)'
	@echo 'LIB $(LIB)'
	@echo 'SOLIB $(SOLIB)'
	@echo 'EXTLIB $(EXTLIB)'
	@echo 'EXTLIBDIR $(EXTLIBDIR)'
	@echo 'PALISADELIB $(PALISADELIB)'

#this target is usesd to cleanup, it is called from the top Makefile
.PHONEY: cleanbenchmarks
cleanbenchmarks:
	@echo " Cleaning Benchmarks...";
	$(RM) -r $(BENCHMARK_BIN_DIR) $(BENCHMARK_BUILD_DIR) $(BENCHMARK_EXAMPLES_BUILD_DIR) $(BENCHMARK_EXAMPLES_BIN_DIR) $(BENCHMARK_LIBSRCDIR)/*.o $(BENCHMARK_LIB)

