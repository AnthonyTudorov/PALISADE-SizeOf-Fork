#
#Copyright (c) 2015, New Jersey Institute of Technology (NJIT)
#All rights reserved.
#Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
#met:
#1. Redistributions of source code must retain the above copyright
#notice, this list of conditions and the following disclaimer.
#2. Redistributions in binary form must reproduce the above copyright
#notice, this list of conditions and the following disclaimer in the
#documentation and/or other materials provided with the distribution.
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#POSSIBILITY OF SUCH DAMAGE.
#


################
# Makefile.targets contains all build instructions for making the
# palisade library object files and the shared library.
################


# this assembles a list of the palisade library sources 
# (using SRCDIR and SRCEXT
# defined in the calling makefile. We need this to build 
# the palisadelibrary
# (note there is a cleaner way to do this as shown in the Makefile.benchmark
LIBSOURCES := $(shell find $(SRCLIBDIR) -name '*.$(SRCEXT)')

# this assembles a list of the palisade library objects (using
# BUILDDIR defined in the calling makefile. We need this to build 
# the shared library
LIBOBJECTS := $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(patsubst %.cpp,%.o,$(LIBSOURCES)))

#this is the actual target that gets called when make is executed
#(part of all in Makefile) it makes the palisade shared object library

.PHONY:alltargets
alltargets: $(EXTLIBDIR)/lib$(SOLIB).so
#	@echo $(SOLIB)
#	@echo $(LIBSOURCES)
#	@echo $(LIBOBJECTS)
#	@echo "alltargets"

#this builds the palisade library out of the objects 
$(EXTLIBDIR)/lib$(SOLIB).so: $(LIBOBJECTS)
	@echo " -- targets:linking $@ from LIBOBJECTS"
#	@echo $(LIBOBJECTS)
	mkdir -p $(EXTLIBDIR)
#	@echo " $(CC) -fPIC -shared -Wl,--export-dynamic  $^ $(BUILDDIR)/$@.o -L/usr/lib/x86_64-linux-gnu -lpython2.7 -lboost_python-py27 -o lib/pycrypto.so"; $(CC) -fPIC -shared -Wl,--export-dynamic  $^ $(BUILDDIR)/$@.o
	$(CC) -fPIC -shared -Wl,--export-dynamic -Wl,--export-all-symbols -o $@ $(LIBOBJECTS) $(LIB)
	@echo

### #this builds the individual objects that make up the library .
.PRECIOUS: $(BUILDDIR)/lib/%
$(BUILDDIR)/lib/%:
	@echo " -- targets:compiling $@"
	mkdir -p $(@D)
	$(CC) -fPIC $(CPPFLAGS) $(INC) -c -o $@ $(patsubst $(BUILDDIR)/%,$(SRCDIR)/%,$(patsubst %.o,%.cpp,$@))
	@echo

#################
# this target lets us see what all the strings are defined as, as an
# aid to debugging the Makefile.targets. Just run make
# make doctargetstrings
.PHONY: doctargetstrings
doctargetstrings:
	@echo 'the following make strings are defined in Makefile.target'
	@echo 'SOLIB $(SOLIB)'
	@echo 'LIBOBJECTS $(LIBOBJECTS)'
	@echo 'EXTLIBDIR $(EXTLIBDIR)'

#this target is used to cleanup, it is called from the top Makefile
.PHONEY: cleantargets
cleantargets:
	@echo " Cleaning targets...";
	$(RM) -r $(LIBOBJECTS) $(EXTLIBDIR)lib$(SOLIB).so
	$(RM) -rf $(EXTLIBDIR)
	$(RM) -rf $(BUILDDIR)/lib

##########  -include $(LIBOBJECTS:.o=.d)
###### define RULE_template =
###### 	$(1): $(subst $(BUILDDIR),$(SRCDIR),$(subst .o,.cpp,$(1)))
###### endef
###### 
###### $(foreach item,$(LIBOBJECTS),$(eval $(call RULE_template,$(item))))
###### 
###### ####$(patsubst $(BUILDDIR),$(SRCDIR),$(LIBOBJECTS)) : $(LIBSOURCES)
###### %.o: %.cpp
###### 	-mkdir -p $(@D)
###### 	$(CC) -fPIC $(CPPFLAGS) $(INC) -c -o $@ $<
###### 	$(CC) -MM -fPIC $(CPPFLAGS) $(INC) $< > $*.d
###### ##### 	@mv -f $*.d $*.d.tmp
###### ##### 	sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d
###### ##### 	sed -e 's/.*://' -e 's/\\\\//' < $*.d.tmp | tee $*.d.tmp2 | fmt -1 | sort -u | \
###### ##### 	  sed -e 's/^ *//' -e 's/$$/:/' >> $*.d
###### ##### #	sed -e 's/.*://' -e 's/\\$$//' < $*.d.tmp | fmt -1 | \
###### ##### #	  sed -e 's/^ *//' -e 's/$$/:/' >> $*.d
###### ##### 	#@rm -f $*.d.tmp
